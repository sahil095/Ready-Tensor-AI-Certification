Q. Why are you interested in working at CodePath?*
Because I love teaching, mentoring and guiding students on a career path. I have been doing this for the past 8 years. I believe the curriculum for higher education at many places still lack the breadth of industry skills. Everyone teaches concepts but no one's teach how to implement it. I believe with CodePath I will be able to achieve that small dream of mine to create amazing education content which covers not only depth but breadth of industry belonged skills.


Q. Share your most successful experience teaching, mentoring and/or managing junior developer(s). What was unique about your approach and how did it impact the outcomes of that initiative?*
I served as a Graduate Teaching Assistant for Data Science and Data Engineering courses, where I mentored over 200 students with conceptual doubts, provided career guidance, and facilitated practical learning in areas such as AWS, Python, SQL, Azure, Databricks, and machine learning. I helped redesign the curriculum for these two courses and integrated more latest concepts than outdated ones keeping the fundamentals intact. I also inaugurated the Weekly Hands-on Lab session which facilitated practical learning over theory. In these labs, I taught the AWS (S3, EC2, EMR, Athena, Lambda, CloudFormation etc.), SQL, Python with practical examples and implementation. 
This particular approach was unique in my way because industry required hands-on skills, tools, along with concepts. As a frontend engineer, to clear interviews in big tech you have to know how to reverse a linked list but to actually work in the industry, you should know HTML, CSS, Javascript, Frameworks etc. Same goes for Backend and ML Engineers. Without tools implementation, conceptual knowledge fails.

While working as a Teaching Assistant I also supported a team of research assistants on the university wide admissions project where we automated admissions decision making using machine learning, data analytics, and data engineering. I worked with all the teams (data analytics, data engineering, and ml) and supported them in decision making. 

I received Outstanding Graduate Student Award for my contributions.


Q What do you believe are today's main opportunities and challenges for software engineering students?*
The main opportunities are GPT-based learning, open-source ecosystems, free cloud tiers, and reward-based projects, which are huge things for students to get motivated to learn software engineering. It's like an "Unlimited-Sandbox".
domain knowledge has become obsolete because of AI. Whether a student’s interest is graphics, cybersecurity, or finance, there’s a machine-learning angle to explore, and employers are hungry for it.
Global apprenticeship has become easily accessible, GitHub, Discord, Google, Meta etc, are generating code review pull requests for open source contributions anywhere in the world. 

Challenges:
Being too reliant on AI can make a person dumb. Students nowadays don't want to learn, but want a job using AI. AI is a tool to help students learn, and that should be the message everywhere. No one wants to focus on fundamentals, and more focus is on shiny things rather than impactful things. 

Salary over learning. The mindset has changed in students nowadays. They don't want to join a company because of the amazing work, but how much the company is offering. Everyone is learning coding because of money and not because of their interests, in the hope they will succeed. This is not a growth mindset.